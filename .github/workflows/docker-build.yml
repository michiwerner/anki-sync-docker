name: Build and Push Docker Image

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  LATEST_ANKI_VERSION: 25.02.6  # Update this when new Anki versions are released

jobs:
  build_and_push:
    # Only run for pushes to tags starting with v*
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Anki version and tagging strategy for Tag Push
        id: anki_details_tag
        run: |
          TAG_VERSION_CLEAN="${GITHUB_REF_NAME#v}" # Strip 'v' prefix, e.g., v25.02.6 -> 25.02.6
          ANKI_VERSION="$TAG_VERSION_CLEAN"
          IS_LATEST_TAG_ELIGIBLE="false"

          echo "Event: Push to tag ${{ github.ref_name }}."
          echo "Anki version to build: $ANKI_VERSION (from tag)"

          if [ "$TAG_VERSION_CLEAN" == "${{ env.LATEST_ANKI_VERSION }}" ]; then
            IS_LATEST_TAG_ELIGIBLE="true"
            echo "This tag's version matches LATEST_ANKI_VERSION, so 'latest' tag will also be applied."
          else
            echo "This tag's version does not match LATEST_ANKI_VERSION."
          fi
          echo "anki_version=$ANKI_VERSION" >> $GITHUB_OUTPUT
          echo "is_latest_tag_eligible=$IS_LATEST_TAG_ELIGIBLE" >> $GITHUB_OUTPUT
          echo "tag_version_clean=$TAG_VERSION_CLEAN" >> $GITHUB_OUTPUT

      - name: Prepare image tags
        id: image_tags
        run: |
          TAG_VERSION="${{ steps.anki_details_tag.outputs.tag_version_clean }}"
          TAGS_STRING="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG_VERSION}"
          if [ "${{ steps.anki_details_tag.outputs.is_latest_tag_eligible }}" == "true" ]; then
            TAGS_STRING="$TAGS_STRING\n${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          fi
          # GITHUB_OUTPUT needs specific syntax for multiline strings
          {
            echo 'tags<<HEREDOC_DELIMITER_TAGS'
            echo -e "$TAGS_STRING"
            echo 'HEREDOC_DELIMITER_TAGS'
          } >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image (multi-platform for Tag Push)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.image_tags.outputs.tags }}
          build-args: |
            ANKI_VERSION=${{ steps.anki_details_tag.outputs.anki_version }}

  build_other:
    # Handles pull_requests OR pushes to any branch that is NOT a v* tag (this includes main)
    if: (github.event_name == 'pull_request') || (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Anki version for this build
        id: anki_version_other
        run: |
          echo "Using latest Anki version ${{ env.LATEST_ANKI_VERSION }} for this build."
          echo "version=${{ env.LATEST_ANKI_VERSION }}" >> $GITHUB_OUTPUT

      - name: Prepare local build tag
        id: local_build_tag
        run: |
          TAG_VALUE_PREFIX=""
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            TAG_VALUE_PREFIX="pr-${{ github.event.number }}"
          elif [ "${{ github.event_name }}" == "push" ] && [[ "${{ github.ref }}" == refs/heads/* ]]; then
            BRANCH_NAME_SANITIZED=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9_.-]/-/g')
            TAG_VALUE_PREFIX="branch-${BRANCH_NAME_SANITIZED}"
          else
            TAG_VALUE_PREFIX="build" # Fallback for other types of refs if any
          fi
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          echo "tag=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG_VALUE_PREFIX}-${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Build Docker image (amd64, no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: ${{ steps.local_build_tag.outputs.tag }}
          build-args: |
            ANKI_VERSION=${{ steps.anki_version_other.outputs.version }}
