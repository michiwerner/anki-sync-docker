name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  LATEST_ANKI_VERSION: 25.02.5  # Update this when new Anki versions are released

jobs:
  build_and_push:
    # Only run for pushes to tags starting with v*
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Anki version and tagging strategy for Tag Push
        id: anki_details_tag
        run: |
          TAG_VERSION_CLEAN="${GITHUB_REF_NAME#v}" # Strip 'v' prefix, e.g., v25.02.5 -> 25.02.5
          ANKI_VERSION="$TAG_VERSION_CLEAN"
          IS_LATEST_TAG_ELIGIBLE="false"

          echo "Event: Push to tag ${{ github.ref_name }}."
          echo "Anki version to build: $ANKI_VERSION (from tag)"

          if [ "$TAG_VERSION_CLEAN" == "${{ env.LATEST_ANKI_VERSION }}" ]; then
            IS_LATEST_TAG_ELIGIBLE="true"
            echo "This tag's version matches LATEST_ANKI_VERSION, so 'latest' tag will also be applied."
          else
            echo "This tag's version does not match LATEST_ANKI_VERSION."
          fi
          echo "anki_version=$ANKI_VERSION" >> $GITHUB_OUTPUT
          echo "is_latest_tag_eligible=$IS_LATEST_TAG_ELIGIBLE" >> $GITHUB_OUTPUT
          echo "tag_version_clean=$TAG_VERSION_CLEAN" >> $GITHUB_OUTPUT

      - name: Extract metadata for Docker (Tag Push)
        id: meta_tag
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag with the anki version (without v)
            type=raw,value=${{ steps.anki_details_tag.outputs.tag_version_clean }}
            # If the tag's anki version is equal to LATEST_ANKI_VERSION, also update the latest tag
            type=raw,value=latest,enable=${{ steps.anki_details_tag.outputs.is_latest_tag_eligible == 'true' }}

      - name: Build and push Docker image (multi-platform for Tag Push)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_tag.outputs.tags }}
          labels: ${{ steps.meta_tag.outputs.labels }}
          build-args: |
            ANKI_VERSION=${{ steps.anki_details_tag.outputs.anki_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_other:
    # Handles pull_requests OR pushes to any branch that is NOT a v* tag (this includes main)
    if: (github.event_name == 'pull_request') || (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Anki version for this build
        id: anki_version_other
        run: |
          echo "Using latest Anki version ${{ env.LATEST_ANKI_VERSION }} for this build."
          echo "version=${{ env.LATEST_ANKI_VERSION }}" >> $GITHUB_OUTPUT

      - name: Extract metadata for Docker (local/non-push build)
        id: meta_other
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=${{ github.event_name == 'pull_request' && format('pr-{0}-', github.event.number) || format('branch-{0}-', github.ref_name) }}
            # Example tags: pr-123-sha123abc, branch-main-sha123abc

      - name: Build Docker image (amd64, no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: ${{ steps.meta_other.outputs.tags }}
          labels: ${{ steps.meta_other.outputs.labels }}
          build-args: |
            ANKI_VERSION=${{ steps.anki_version_other.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
